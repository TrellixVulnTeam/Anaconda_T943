diff --git bcolz/carray_ext.pyx bcolz/carray_ext.pyx
index 367315a..ff3a869 100644
--- bcolz/carray_ext.pyx
+++ bcolz/carray_ext.pyx
@@ -70,7 +70,7 @@ IntType = np.dtype(np.int_)
 #-----------------------------------------------------------------
 
 # numpy functions & objects
-from definitions cimport (malloc,
+from .definitions cimport (malloc,
                           realloc,
                           free,
                           memcpy,
diff --git bcolz/tests/test_ctable.py bcolz/tests/test_ctable.py
index 830f777..f9a3d8a 100644
--- bcolz/tests/test_ctable.py
+++ bcolz/tests/test_ctable.py
@@ -1517,7 +1517,7 @@ class iterblocksTest(MayBeDiskTest):
         for block in bcolz.iterblocks(t, blen, blen - 1):
             l += len(block)
             # f8 is to small to hold the sum on 32 bit
-            s += block['f1'].sum(dtype='f16')
+            s += block['f1'].sum(dtype=np.longdouble)
         self.assertEqual(l, (N - (blen - 1)))
         self.assertEqual(s, (np.arange(blen - 1, N, dtype='f8') * 2).sum())
 
diff --git setup.py setup.py
index 7ed7aca..440460a 100644
--- setup.py
+++ setup.py
@@ -1,4 +1,4 @@
-########################################################################
+ï»¿########################################################################
 #
 # License: BSD
 #       Created: August 16, 2012
@@ -24,21 +24,13 @@ import re
 
 from setuptools import setup, Extension, find_packages
 from setuptools.command.build_ext import build_ext
+from numpy import get_include
+from Cython.Build import cythonize
 
 
 # Prevent numpy from thinking it is still in its setup process:
 __builtins__.__NUMPY_SETUP__ = False
 
-
-class BuildExtNumpyInc(build_ext):
-    def build_extensions(self):
-        from numpy.distutils.misc_util import get_numpy_include_dirs
-        for e in self.extensions:
-            e.include_dirs.extend(get_numpy_include_dirs())
-
-        build_ext.build_extensions(self)
-
-
 # Global variables
 CFLAGS = os.environ.get('CFLAGS', '').split()
 LFLAGS = os.environ.get('LFLAGS', '').split()
@@ -46,7 +38,7 @@ LFLAGS = os.environ.get('LFLAGS', '').split()
 BLOSC_DIR = os.environ.get('BLOSC_DIR', '')
 
 # Sources & libraries
-inc_dirs = [abspath('bcolz')]
+inc_dirs = [abspath('bcolz'), "."]
 lib_dirs = []
 libs = []
 def_macros = []
@@ -92,6 +84,20 @@ else:
 if os.name == 'posix' and re.match("i.86", platform.machine()):
     CFLAGS.append("-msse2")
 
+inc_dirs.append(get_include())
+
+extensions = [Extension(
+                        'bcolz.carray_ext',
+                        include_dirs=inc_dirs,
+                        define_macros=def_macros,
+                        sources=sources,
+                        library_dirs=lib_dirs,
+                        libraries=libs,
+                        extra_link_args=LFLAGS,
+                        extra_compile_args=CFLAGS
+                        ),
+              ]
+
 tests_require = []
 
 if v < (3,):
@@ -145,19 +151,7 @@ for binary data.
     url='https://github.com/Blosc/bcolz',
     license='BSD',
     platforms=['any'],
-    ext_modules=[
-        Extension(
-            'bcolz.carray_ext',
-            include_dirs=inc_dirs,
-            define_macros=def_macros,
-            sources=sources,
-            library_dirs=lib_dirs,
-            libraries=libs,
-            extra_link_args=LFLAGS,
-            extra_compile_args=CFLAGS
-        )
-    ],
-    cmdclass={'build_ext': BuildExtNumpyInc},
+    ext_modules=cythonize(extensions),
     install_requires=['numpy>=1.7'],
     setup_requires=[
         'cython>=0.22',
